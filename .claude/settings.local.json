{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(claude config --model opus)",
      "Bash(find:*)",
      "Bash(rg:*)",
      "Bash(grep:*)",
      "Bash(chmod:*)",
      "Bash(./convert_to_utf8_bom.sh:*)",
      "Bash(dos2unix:*)",
      "Bash(sed:*)",
      "Bash(bash:*)",
      "Bash(python3:*)",
      "Bash(python:*)",
      "Bash(g++:*)",
      "Bash(./AHC025_test)",
      "Bash(./AHC025_test2)",
      "Bash(awk:*)",
      "Bash(cp:*)",
      "Bash(git checkout:*)",
      "Bash(diff:*)",
      "Bash(diff:*)",
      "Bash(for i in {0000..0099})",
      "Bash(do echo \"Testing case $i\")",
      "Bash(done)",
      "Bash(./test_comparison.sh:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(for line in 1789 1957 2184 2444 2564 2722 2928 3098 3243 3430 3609 3840 3989 4189 4384 4599 4826)",
      "Bash(do echo \"=== Line $line ===\")",
      "Bash(done)",
      "Bash(#!/bin/bash\n# Test just first 5 cases\ntotal_cases=0\nmatching_cases=0\n\necho \"Testing first 5 cases...\"\nfor i in 0000 0001 0002 0003 0004; do\n    input_file=\"in/${i}.txt\"\n    \n    # Run original\n    ./AHC025_original < \"$input_file\" > \"test_original_${i}.txt\" 2>&1\n    \n    # Run refactored\n    ./AHC025_refactored < \"$input_file\" > \"test_refactored_${i}.txt\" 2>&1\n    \n    # Extract scores\n    original_score=$(grep -E \"score\\s*=\\s*[0-9]+\" \"test_original_${i}.txt\" | tail -1 | sed -E 's/.*score\\s*=\\s*([0-9]+).*/\\1/')\n    refactored_score=$(grep -E \"score\\s*=\\s*[0-9]+\" \"test_refactored_${i}.txt\" | tail -1 | sed -E 's/.*score\\s*=\\s*([0-9]+).*/\\1/')\n    \n    total_cases=$((total_cases + 1))\n    \n    if [ \"$original_score\" = \"$refactored_score\" ]; then\n        matching_cases=$((matching_cases + 1))\n        echo \"Case $i: MATCH (score = $original_score)\"\n    else\n        echo \"Case $i: DIFF (original = $original_score, refactored = $refactored_score)\"\n    fi\ndone\n\necho \"Summary: $matching_cases/$total_cases matching\")",
      "Bash(# Check if test output files exist\nls test_original_*.txt test_refactored_*.txt 2>/dev/null | wc -l)",
      "Bash(# Compare scores for the first 5 test cases\nfor i in 0000 0001 0002 0003 0004; do\n    if [ -f \"test_original_${i}.txt\" ] && [ -f \"test_refactored_${i}.txt\" ]; then\n        orig=$(grep -E \"score\\s*=\\s*[0-9]+\" \"test_original_${i}.txt\" | tail -1 | sed -E 's/.*score\\s*=\\s*([0-9]+).*/\\1/')\n        refact=$(grep -E \"score\\s*=\\s*[0-9]+\" \"test_refactored_${i}.txt\" | tail -1 | sed -E 's/.*score\\s*=\\s*([0-9]+).*/\\1/')\n        echo \"Case $i: original=$orig, refactored=$refact\"\n    fi\ndone)",
      "Bash(rm:*)",
      "Bash(./test_refactor.sh:*)",
      "Bash(cat:*)",
      "Bash(ls:*)",
      "Bash(./AHC023_new)",
      "WebFetch(domain:atcoder.jp)",
      "WebFetch(domain:atcoder.jp)",
      "WebFetch(domain:atcoder.jp)",
      "Bash(./AHC023 2 >& 1)",
      "Bash(./AHC028_new)",
      "Bash(echo:*)",
      "Bash(./AHC030)",
      "Bash(timeout:*)",
      "Bash(gdb:*)",
      "Bash(mv:*)",
      "Bash(./AHC014)",
      "Bash(/dev/null)",
      "Bash(./AHC013)",
      "Bash(./AHC015)",
      "Bash(for i in {2..20})",
      "Bash(do sed -i \"s/Solver$i(/solver_$i(/g\" AHC016.cpp)",
      "Bash(for i in {21..24})",
      "Bash(./AHC016)",
      "Bash(./AHC017)",
      "Bash(./AHC018)",
      "Bash(./AHC019)",
      "Bash(./AHC020)",
      "Bash(./AHC001)",
      "Bash(./AHC003)"
    ],
    "deny": []
  }
}